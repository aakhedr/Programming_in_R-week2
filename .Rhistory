q()
q()
for (i = 1:10) {}
for (i in 1:10) {}
q()
for (i in 1:5) { print i }
x <- c("a", "b", "c", "d")
for(i in 1:4) {print(x[i]) }
for (i in 1:5) {print(i)}
for (letter in x) {print(letter)}
for (i in seq_along(x)) {print(i)}
x <- matrix(1:6, 2, 3)
x
?matrix
seq_len(x)
seq_len(nrow(x))
seq_len(ncol(x))
?seq_len
y <- c(1, 2, 3, 4)
seq_len(y)
y
seq_len(y)
y
seq_len(length(y))
size(x)
?size
args(cat)
args(paste)
args(lm)
x
cl()
add2 <- function(x, y) {
x + y
}
add2(3, 5)
above10 <- function(x) {
x[x > 10]
}
above10(c(1, 2, 15, 20, 30))
martix(1:10, 2, 5)
matrix(1:10, 2, 5)
x <- matrix(1:10, 2, 5)
mean(x)
mean(x[, 1:5])
mean(x[, 1])
length(x)
length(x, 1)
?length
seq_len(nrow(x))
length(x[,1])
length(x[1,])
mean(x[])
colMean <- function(x) {
means <- numeric(nc)
for(i = 1: ncol(x)) {
means(i) <- mean(x[, i])
}
}
colMean <- function(x) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means(i) <- mean(x[, i])
}
}
x <- matrix(1:10, 2, 5)
colMean(x)
means <- numeric(10)
means
ncol(x)
means <- numerix(ncol(x))
means <- numeric(ncol(x))
means
means(1)
colMean <- function(x) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i])
}
}
x
colMean(x)
colMean <- function(x) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i])
}
means
}
x
colMean(x)
colMean <- function(x) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i])
}
}
x
colMean(x)
colMean(x)
y <- colMean(x)
y
args(mean)
?mean
y <- matrix(1:8, 2, 5)
y <- matrix(1:10, 2, 5)
y[2,4] <- NA
y[1, 2] <- NA
y
colMean(y)
colMean <- function(x, removeNA=TRUE) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i], na.rm=removeNA)
}
means
}
colMean(y)
colMean <- function(x, removeNA=FALSE) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i], na.rm=removeNA)
}
means
}
colMean(y)
colMean <- function(x, removeNA=TRUE) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i], na.rm=removeNA)
}
means
}
colMean(y)
y
z <- matrix(1:10, 2, 5)
z > 5
z[z > 5]
z
z[, z > 5]
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x > 5
x <- 0
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
q()
corr <- function(directory, threshold = 0) {
df <- complete(directory, id=1:332)
correlations <- numeric(0)
for (i in 1:nrow(df)) {
if (df[i, 2] > threshold) {
data <- read.csv(constructPaths(directory, id=df[i, 1]))
data <- data[complete.cases(data), ]
correlations <- c(correlations,
cor(data[, "sulfate",], data[, "nitrate"]))
}
}
correlations
}
constructPaths <- function(directory, id) {
paths <- character(length(id))
id <- as.character(id)
for (i in 1:length(id)) {
if (as.numeric(id[i]) < 10) {
id[i] <- paste("00", id[i], sep="")
}
else if (as.numeric(id[i]) >= 10 & as.numeric(id[i]) < 100) {
id[i] <- paste("0", id[i], sep="")
}
paths[i] <- paste(directory, "/", id[i], ".csv", sep="")
}
paths
}
cr <- corr("specdata", 150)
complete <- function(directory, id=1:332) {
df <- as.data.frame(matrix(data=NA, nrow=length(id), ncol=2))
names(df) <- c("id", "nobs")
paths <- constructPaths(directory, id)
for (i in 1:length(paths)) {
data <- read.csv(paths[i])
data <- data[complete.cases(data), ]
df[i, 1] <- as.numeric(id[i]); df[i, 2] <- nrow(data)
}
df
}
cr <- corr("specdata", 150)
setwd("~/Dropbox/Johns_Hopkins/R/week2")
cr <- corr("specdata", 150)
tail(cr)
head(cr)
getwd()
q()
